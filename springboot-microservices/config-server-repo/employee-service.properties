server.port: 8081

spring.datasource.url: jdbc:mysql://localhost:3306/employee-db
spring.datasource.username: root
spring.datasource.password: root

# The dialect to use is detected by the JPA provider. If you prefer to set the dialect yourself,
# set the "spring.jpa.database-platform" property or the "spring.jpa.properties.hibernate.dialect" property
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
#spring.jpa.database-platform: org.hibernate.dialect.MySQL8Dialect

spring.jpa.hibernate.ddl-auto: update

# Opcionales porque estamos usando los valores por defecto para realizar la conexión con RabbitMQ
#spring.rabbitmq.host: localhost
#spring.rabbitmq.port: 5671
#spring.rabbitmq.username: guest
#spring.rabbitmq.password: guest

# Por defecto, el valor de esta propiedad es 0.1, es decir, un 10%
spring.sleuth.sampler.probability: 1.0

# Opcional porque es el valor por defecto
spring.zipkin.base-url: http://localhost:9411
#spring.zipkin.enabled=false

management.endpoints.web.exposure.include: health,refresh,bus-refresh
management.health.circuitbreakers.enabled: true
management.endpoint.health.show-details: always

resilience4j.circuitbreaker.instances.employee-service.registerHealthIndicator: true
resilience4j.circuitbreaker.instances.employee-service.failureRateThreshold: 50
resilience4j.circuitbreaker.instances.employee-service.minimumNumberOfCalls: 5
resilience4j.circuitbreaker.instances.employee-service.automaticTransitionFromOpenToHalfOpenEnabled: true
resilience4j.circuitbreaker.instances.employee-service.waitDurationInOpenState: 5s
resilience4j.circuitbreaker.instances.employee-service.permittedNumberOfCallsInHalfOpenState: 3
resilience4j.circuitbreaker.instances.employee-service.slidingWindowSize: 10
resilience4j.circuitbreaker.instances.employee-service.slidingWindowType: COUNT_BASED

resilience4j.retry.instances.employee-service.registerHealthIndicator: true
resilience4j.retry.instances.employee-service.maxRetryAttempts: 5
resilience4j.retry.instances.employee-service.waitDuration: 1s

spring.boot.message: Hello, Employee Service
